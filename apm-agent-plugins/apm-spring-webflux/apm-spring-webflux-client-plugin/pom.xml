<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>co.elastic.apm</groupId>
        <artifactId>apm-spring-webflux</artifactId>

        <version>1.25.1-SNAPSHOT</version>
    </parent>

    <artifactId>apm-spring-webflux-client-plugin</artifactId>
    <name>${project.groupId}:${project.artifactId}</name>

    <properties>
        <!-- for licence header plugin -->
        <apm-agent-parent.base.dir>${project.basedir}/../../..</apm-agent-parent.base.dir>

        <!-- spring boot version to use (for testing), needs to be kept in sync with spring version below -->
        <version.spring-boot>2.2.4.RELEASE</version.spring-boot>

        <!-- spring version & reactor our instrumentation will rely on -->
        <version.spring>5.2.3.RELEASE</version.spring>
        <version.reactor>3.4.6</version.reactor>
        <animal.sniffer.skip>true</animal.sniffer.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- using spring bom dependency to resolve dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${version.spring-boot}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${version.spring}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
            <version>${version.spring}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>apm-spring-webflux-testapp</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- required to test integration with API, for example custom transaction naming -->
        <dependency>
            <groupId>co.elastic.apm</groupId>
            <artifactId>apm-api-plugin</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>co.elastic.apm</groupId>-->
<!--            <artifactId>apm-agent-api</artifactId>-->
<!--            <version>${project.version}</version>-->
<!--        </dependency>-->
        <!-- required for context-propagation during tests, but only at runtime -->

<!--        <dependency>-->
<!--            <groupId>co.elastic.apm</groupId>-->
<!--            <artifactId>apm-reactor-plugin</artifactId>-->
<!--            <version>${project.version}</version>-->
<!--&lt;!&ndash;            <scope>test</scope>&ndash;&gt;-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>co.elastic.apm</groupId>-->
<!--            <artifactId>apm-reactor-plugin</artifactId>-->
<!--            <version>${project.version}</version>-->
<!--            <scope>test</scope>-->
<!--            <type>test-jar</type>-->
<!--        </dependency>-->


        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${version.spring}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <version>${version.reactor}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <exclusions>
                <!-- exclude logback as it conflicts with slf4j-simple provided by agent core -->
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <!-- exclude slf4j implementation as it conflicts with the one provide by agent core -->
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- include tomcat server in classpath to allow testing with servlets -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>

        <!-- required otherwise we only have it in test scope, and makes map<>json conversion fail -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.11.0</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <!-- we have to exclude junit from spring-boot to use the same as other agent modules
                otherwise having multiple versions makes intellij issue a 'No test found' error -->
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- for an unknown reason, version 1.5.2 is resolved and breaks junit tests execution -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>1.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>co.elastic.apm</groupId>
            <artifactId>apm-httpclient-core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>


<!--        unsure about the version
spring boot -> 9.4.25.v20191220
-->
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-client</artifactId>
            <version>9.4.25.v20191220</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-reactive-httpclient</artifactId>
            <version>1.0.3</version>
        </dependency>

        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-websockets-jsr</artifactId>
            <version>2.0.26.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.xnio</groupId>
            <artifactId>xnio-api</artifactId>
            <version>3.3.8.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
    </dependencies>
    <!--
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>

                <version>${version.spring-boot}</version>
                <configuration>
                    <mainClass>co.elastic.apm.agent.springwebflux.testapp.WebFluxApplication</mainClass>

                    <classifier>standalone</classifier>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
-->
</project>
